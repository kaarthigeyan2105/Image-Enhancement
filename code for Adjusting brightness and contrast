import cv2
import numpy as np

def adjust_brightness_contrast(image, brightness=0, contrast=0):
    """
    Adjust the brightness and contrast of an image.
    
    Parameters:
        image (numpy.ndarray): Original image.
        brightness (int): Value to adjust brightness. Range: -255 to 255.
        contrast (int): Value to adjust contrast. Range: -127 to 127.
        
    Returns:
        numpy.ndarray: Adjusted image.
    """
    # If brightness and contrast are both 0, return the original image
    if brightness == 0 and contrast == 0:
        return image

    # Clip brightness to range [-255, 255]
    brightness = np.clip(brightness, -255, 255)
    
    # Clip contrast to range [-127, 127]
    contrast = np.clip(contrast, -127, 127)
    
    # Apply brightness and contrast adjustments
    if contrast != 0:
        alpha = 131 * (contrast + 127) / (127 * (131 - contrast))
        gamma = 127 * (1 - alpha)
    else:
        alpha = 1.0
        gamma = 0

    adjusted = cv2.addWeighted(image, alpha, image, 0, gamma + brightness)
    
    return adjusted

# Load the image
image_path = r"C:\Users\nirjh\Downloads\OIP.jpg"  # Use raw string to handle backslashes
image = cv2.imread(image_path, cv2.IMREAD_COLOR)

# Check if the image was loaded successfully
if image is None:
    print("Error: Could not load image. Please check the file path.")
else:
    # Adjust brightness and contrast
    brightness = 50  # Adjust brightness (-255 to 255)
    contrast = 30  # Adjust contrast (-127 to 127)
    adjusted_image = adjust_brightness_contrast(image, brightness, contrast)

    # Display the original and adjusted images
    cv2.imshow("Original Image", image)
    cv2.imshow("Adjusted Image", adjusted_image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
